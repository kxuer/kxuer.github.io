(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{357:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),s("h2",{attrs:{id:"基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("函数形参个数和实参个数匹配问题：https://www.bilibili.com/video/BV1ux411d75J/?p=119")])]),t._v(" "),s("li",[s("p",[t._v("return只能返回一个值；return多个以逗号隔开的值，会返回最后一个而已；可尝试返回数组，这样就相当于多个值了。")])]),t._v(" "),s("li",[s("p",[t._v("arguments是当前函数内置的一个对象，存储了调用函数时所有的实参，是一个”伪数组“：https://www.bilibili.com/video/BV1ux411d75J?p=126")])]),t._v(" "),s("li",[s("p",[t._v("函数表达式：")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("形参")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("实参"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("作用域：就是代码名字（如变量名）在某个范围内起作用和效果，目的是减少命名冲突、提供代码可靠性。")])]),t._v(" "),s("p",[t._v("ES6前的作用域：分为全局作用域和局部作用域（或称为函数作用域）。")]),t._v(" "),s("ul",[s("li",[t._v("全局作用域：整个"),s("code",[t._v("script")]),t._v("标签或引入的单独的js文件。")]),t._v(" "),s("li",[t._v("局部作用域：函数内部。")])]),t._v(" "),s("p",[t._v("根据作用域不同，变量分为全局变量和局部变量。")]),t._v(" "),s("p",[t._v("注意：在函数内不声明的变量也是全局变量。\n全局变量占用的内存只有在浏览器关闭时才会销毁。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("ES6之前没有块级作用域{}，导致如下：\n")])])]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//无块级作用域")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//num=10可访问")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("注意：直接给一个变量赋值，没有用var声明，则把该变量当全局变量看。")]),t._v(" "),s("p",[t._v("作用域链：内部函数访问外部函数的变量，采取链式查找的方式决定取哪个值（就近原则）。")]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[t._v("js引擎运行js分为两步：预解析和代码执行            https://www.bilibili.com/video/BV1ux411d75J?p=141")])]),t._v(" "),s("ul",[s("li",[t._v("1)预解析：js引擎会把js中所有的var声明和function声明“提升”到“当前”作用域的最前面。（不提升赋值操作，不调用函数）")]),t._v(" "),s("li",[t._v("2)按照代码书写的顺序从上往下执行。")])]),t._v(" "),s("ol",{attrs:{start:"7"}},[s("li",[s("p",[t._v("检测类型使用instanceof：arr instanceof Array返回true。")])]),t._v(" "),s("li",[s("p",[t._v("JS设计模式：Module Design Pattern、Observer Design Pattern、Prototype Design Pattern、Singleton Design Pattern。"),s("a",{attrs:{href:"https://www.digitalocean.com/community/tutorial_series/javascript-design-patterns",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript Design Patterns"),s("OutboundLink")],1)])])]),t._v(" "),s("h2",{attrs:{id:"类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),s("ol",[s("li",[t._v("简单类型和复杂类型")])]),t._v(" "),s("ul",[s("li",[t._v("简单类型：又叫基本数据类型或值类型\n"),s("ul",[s("li",[t._v("在存储时变量中存储的是值本身，包括string、number、boolean、undefined、null。")]),t._v(" "),s("li",[t._v("在栈中存放的是值。")]),t._v(" "),s("li",[t._v("参数传递：复制一份值。")])])]),t._v(" "),s("li",[t._v("复杂类型：又叫引用类型\n"),s("ul",[s("li",[t._v("在存储时变量中存储的是地址（引用），包括使用new关键字创建的对象（系统对象、自定义对象），如Object、Array、Date等。")]),t._v(" "),s("li",[t._v("在栈中存放的是地址，指向堆中的数据。")]),t._v(" "),s("li",[t._v("参数传递：复制地址（引用），操作的是同一个对象。")])])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("基本包装类型：就是把简单数据类型包装成复杂数据类型，使其具有了属性和方法。包括String，Number和Boolean\n如：")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ANDY'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("其内部执行过程如下：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1. 生成临时变量，将简单类型包装成复杂数据类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ANDY'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2. 赋值给我们声明的字符串变量")]),t._v("\nstr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3. 销毁临时变量")]),t._v("\ntemp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("ol",[s("li",[t._v("函数定义的三种方式：\n"),s("ul",[s("li",[t._v("命名函数")]),t._v(" "),s("li",[t._v("函数表达式（匿名函数）")]),t._v(" "),s("li",[t._v("var f = new Function('参数n', '函数体');    //参数和函数体都必须是字符串形式，效率较低")])])])]),t._v(" "),s("p",[t._v("=> 所有的函数都是Function的对象实例。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("六种函数的调用方式：https://www.bilibili.com/video/BV1DY41177dM?p=53")])]),t._v(" "),s("li",[s("p",[t._v("函数内部this的指向：一般指向函数的调用者。 https://www.bilibili.com/video/BV1DY41177dM?p=54")])])]),t._v(" "),s("p",[t._v("改变函数内this的指向，js提供了三个方法：call，apply，bind")]),t._v(" "),s("ul",[s("li",[t._v("call：主要用于继承中。")]),t._v(" "),s("li",[t._v("apply：函数名.apply(obj, arr);    //函数运行时this指向obj，即第一个参数；第二个参数必须是数组。主要用于如借助数学对象求最大值：var max = Math.max.apply(Math, [1,8,3,6,2]);")]),t._v(" "),s("li",[t._v("bind：函数名.bind(obj, 实参i);    //不会调用函数，返回的是原函数中的this被改变和形参被赋值后的新函数。使用：可免去使用var that = this;分配新内存。 https://www.bilibili.com/video/BV1DY41177dM?p=58   https://www.bilibili.com/video/BV1DY41177dM?p=59")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("高阶函数：就是对其他函数进行操作的函数，其参数是函数或返回值是函数。\n"),s("ul",[s("li",[t._v("闭包（closure）：指有权访问另一个函数作用域中变量的函数。（变量所在的函数叫闭包函数）    chrome中查看：Scope   https://www.bilibili.com/video/BV1DY41177dM?p=64\n主要作用：延申了变量的作用范围，但也导致函数中的变量在函数调用完成之后不会离开销毁。")])])])]),t._v(" "),s("h2",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),s("ol",[s("li",[t._v("创建对象的三种方法：")])]),t._v(" "),s("ul",[s("li",[t._v("1)使用对象字面量{}：")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHi")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hi~'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("ul",[s("li",[t._v("2)使用new Object创建对象：")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建一个空的对象")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//添加对象的属性")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ul",[s("li",[t._v("3)使用构造函数创建对象：构造函数-就是把对象里面一些相同的属性和方法“抽象”出来封装到“函数”里面。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("构造函数名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("形参n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 形参i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("方法")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不需要return就可以返回结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("构造函数名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("形参"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建对象")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("new关键字的执行步骤：(1)在内存中创建一个新的空对象; (2)让this指向这个新对象; (3)执行构造函数里面的代码，给这个新对象添加属性和方法; (4)返回这个新对象。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("遍历对象：使用for in")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出属性名")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出属性值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("js中的对象分为3种：自定义对象，内置对象，浏览器对象")])]),t._v(" "),s("p",[t._v("查MDN：")]),t._v(" "),s("p",[s("code",[t._v("内置对象：")])]),t._v(" "),s("p",[t._v("Math")]),t._v(" "),s("p",[t._v("Date")]),t._v(" "),s("p",[t._v("Array：\n创建：使用[]字面量或new Array()\n常用函数：forEach(function(value, index, array){...})\nfilter(function(value, index, array){...})    //筛选数组；会返回一个新数组\nsome(function(value, index, array){...})    //查找是否存在；会返回一个布尔值")]),t._v(" "),s("p",[t._v("String：不可变（会生成新对象，所以不要大量拼接字符串）")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[t._v("类的静态成员：   https://www.bilibili.com/video/BV1DY41177dM/?p=25")]),t._v(" "),s("p",[t._v("构造函数名.成员名 = ...    //访问的时候也只能提供 "),s("code",[t._v("构造函数名.成员名")]),t._v(" 访问，不能通过 "),s("code",[t._v("对象变量.成员名")]),t._v(" 访问")])]),t._v(" "),s("li",[s("p",[t._v("在构造函数里创建方法会存在浪费内存空间的问题，因为通过 this.方法 创建函数，会给每个对象创建一个方法对象（复杂对象，在堆中分配一个新空间）。  https://www.bilibili.com/video/BV1DY41177dM/?p=26")])])]),t._v(" "),s("p",[t._v("js规定：每个构造函数都有一个prototype属性，指向一个对象，称为"),s("code",[t._v("原型对象")]),t._v("。这个原型对象中的所有属性和方法，都会被构造函数所拥有。")]),t._v(" "),s("p",[t._v("我们可以把那些不变的方法，直接定义在prototype对象上，这样类的所有实例就可以共享这些方法。\n"),s("code",[t._v("构造函数名.prototype.方法 = function(){...}")]),s("br"),t._v("\n对象实例中都会有一个__proto__属性指向构造函数的prototype原型对象（__proto__也称为"),s("code",[t._v("对象原型")]),t._v("，但开发中不可以使用__proto__属性）；查找对象的方法时先查找对象有没有对应的方法，如果没有，则看__proto__指向的对象中有没有该方法。")]),t._v(" "),s("p",[t._v("prototype对象中有一个constructor属性，指向原来的构造函数。注意：如果修改了prototype对象，如给prototype对象赋值一个新对象，则必须手动将原来的构造函数赋值给constructor属性。")]),t._v(" "),s("p",[t._v("原型链：如下图。\n"),s("img",{attrs:{src:"https://cdn.staticaly.com/gh/kxuer/image_store@main/img/protochain.pqyfoy2tpww.png",alt:"原型链",title:"原型链"}})]),t._v(" "),s("p",[t._v("对象成员查找规则：按照原型链往上查找，就近原则。")]),t._v(" "),s("p",[t._v("方法里this指向：也是谁调用的就指向谁。")]),t._v(" "),s("p",[t._v("利用原型对象扩展内置对象方法：如 "),s("code",[t._v("Array.prototype.方法 = function(){...}")])]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[s("p",[t._v("函数对象中的call方法：可以调用这个函数，并且修改函数运行时this的指向。\n函数名.call(obj, 实参i);    //函数运行时this指向obj，即第一个参数；后面的参数将赋值给函数的形参")])]),t._v(" "),s("li",[s("p",[t._v("继承：ES5没有extends，只能使用构造函数+原型模拟实现继承，也称为组合继承。")])])]),t._v(" "),s("ul",[s("li",[t._v("利用父构造函数继承属性：")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("uname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" score")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//this指向使用子构造函数创建的实例")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("score "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" score"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("利用原型对象继承方法：")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意：如果修改了prototype对象，则必须手动将原来的构造函数赋值给constructor属性")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("新方法")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ol",{attrs:{start:"8"}},[s("li",[t._v("Object.defineProperty(obj, prop, description)：给对象obj添加新属性或修改原有属性。\ndescription以一个对象的形式出现：{value: 属性值, writable: 属性是否允许修改（true或false）, enumerable: 属性是否可被遍历（默认为false）, configurable: 属性是否可被删除或重新设置description}")])]),t._v(" "),s("p",[t._v("Object.keys(obj)：用于获取对象obj自身所有的属性名，返回一个数组。")]),t._v(" "),s("ol",{attrs:{start:"9"}},[s("li",[t._v("正则表达式：")])]),t._v(" "),s("p",[t._v("创建正则表达式对象：\n* 使用new RegExp：var re = new RegExp(/表达式/);\n* 使用字面量：var re = /表达式/;")]),t._v(" "),s("p",[t._v("测试字符串是否正则表达式：re.test(str);")]),t._v(" "),s("h2",{attrs:{id:"严格模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#严格模式"}},[t._v("#")]),t._v(" 严格模式")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/kxuer/image_store@main/img/%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F.37f3k7pzah00.png",alt:"什么是严格模式"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/kxuer/image_store@main/img/%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F-%E5%8F%98%E9%87%8F%E8%A7%84%E5%AE%9A.5cf95u6zyeo0.png",alt:"严格模式-变量规定"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/kxuer/image_store@main/img/%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F-this%E6%8C%87%E5%90%91.6sowgi8k7fg0.png",alt:"严格模式-this指向"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/kxuer/image_store@main/img/%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F-%E5%87%BD%E6%95%B0%E5%8F%98%E5%8C%96.2yfg4a6lnv60.png",alt:"严格模式-函数变化"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);